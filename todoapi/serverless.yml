service: awstodoapi

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-central-1
  stage: dev

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
      - http:
          path: hello
          method: post
  gettodos:
    handler: handler.getTodos
    events:
      - http:
          path: todos
          method: get

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todos-${opt:stage}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource: arn:aws:dynamodb:*:*:table/todos-${opt:stage}
        Roles:
          - Ref: IamRoleLambdaExecution

custom:
  stageVariables:
    todos_table: ${self:resources.Resources.DynamoDbTable.Properties.TableName}

plugins:
  - serverless-plugin-stage-variables